version: '3.8'

services:
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: api-app
  #   ports:
  #     - "3333:3333"
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@api-pg:5432/api-pg
  #     - JWT_SECRET=${JWT_SECRET}
  #     - NODE_ENV=${NODE_ENV}
  #     - PORT=${PORT}
  #     - OTEL_TRACES_EXPORTER=${OTEL_TRACES_EXPORTER}
  #     - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
  #     - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME}
  #     - OTEL_NODE_ENABLED_INSTRUMENTATIONS=${OTEL_NODE_ENABLED_INSTRUMENTATIONS}
  #   depends_on:
  #     - api-pg
  #     - jaeger
  #   networks:
  #     - app-network

  api-pg:
    image: bitnami/postgresql
    container_name: api-pg
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pg_data:/bitnami/postgresql
    networks:
      - app-network
  
  jaeger:
    image: jaegertracing/all-in-one:1.57
    container_name: jaeger
    ports:
      - "16686:16686" # UI
      - "6831:6831/udp" # Traces UDP
      - "14268:14268" # Traces HTTP
      - "4317:4317" # OTLP/gRPC
      - "4318:4318" # OTLP/HTTP
    networks:
      - app-network

volumes:
  pg_data:

networks:
  app-network:
    driver: bridge